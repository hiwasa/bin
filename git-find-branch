#!/bin/bash

if [ "$1" = "" -o "$1" = "--help" -o "$1" = "-h" ];then echo -en "usage: ${0##*/} hash [options..]\n git log find -- find branch in which target hash contributes\n\n options:\n  options for git-log\n";exit 0;fi
hash=$1
head=${2:-HEAD}
if [ "$(git cat-file $hash -t)" != 'commit' ];then echo -en "'$hash' is not something represents commit\nuse -h\n";exit;fi
head=$(git rev-parse "$head")
hash=$(git rev-parse "$hash")

hashes=($(git rev-list "$hash^..$head" --first-parent))
hashlast=${#hashes[@]}
i=$(expr $hashlast / 2)
j=$i
k=0
while [ $j -gt 0 -a "$hash" != "${hashes[$i]}" ];do
 k=$(expr $j % 2)
 j=$(expr $j / 2)
 if [ $i -ge $hashlast ] || ! git merge-base --is-ancestor "$hash" "${hashes[$i]}";then
  i=$(expr $i - $j - $k)
 else
  i=$(expr $i + $j + $k)
  j=$(expr $j + $k)
 fi
done
while [ $i -gt 0 ] && [ "${hashes[$i]}" != $hash ] && ! git log -1 ${hashes[$i]} --pretty='%p'|grep --quiet ' ';do i=$(expr $i - 1);done
if ! git merge-base --is-ancestor "$hash" "${hashes[$i]}";then
  exit 1
fi
echo "${hashes[$i]}"
exit
