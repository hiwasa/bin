#!/bin/bash

if [ "$1" = "" -o "$2" = "" ];then
    cat <<_END_
usage: ${0##*/} <branch> <files>...
 checkout target branch without causing conflict of ignored files
 'ignore' and 'reveal' command (or alias) will be used to handle ignored files, or 'update-index' if command not exist

 <branch> target branch name to switch
 <files> ignoring files
_END_
    exit 1
fi
BRANCH=$1
shift
IGNORES=()
for F in "$@";do
    if git help reveal|grep --quiet '.';then
        git reveal "$F"
    else
        git update-index --no-skip-worktree
    fi
    if [ $? -ne 0 ];then
        echo error in reveal
        break
    elif ! git diff --quiet;then
        IGNORES=("${IGNORES[@]}" "$F")
    fi
done
git stash
if [ $? -ne 0 ];then
    echo error in stash
    BRANCH=""
else
    git checkout "${BRANCH}"
    if [ $? -ne 0 ];then
        echo error in checkout
    fi
fi
if [ "${BRANCH}" != "" ];then
    git stash pop > /dev/null
    if [ $? -ne 0 ];then
        echo error in pop
    fi
fi
for F in ${IGNORES[@]};do
    if git help ignore|grep --quiet '.';then
        git ignore "$F"
    else
        git update-index --skip-worktree
    fi
done
